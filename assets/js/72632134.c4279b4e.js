"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[332],{94089:e=>{e.exports=JSON.parse('{"functions":[{"name":"_processOutgoingQueue","desc":"Sends all queued outgoing packets over the Remote.","params":[],"returns":[],"function_type":"method","source":{"line":104,"path":"lib/Bridge.luau"}},{"name":"_processIncoming","desc":"Processes an incoming packet, adding it to the incoming queue.","params":[{"name":"sender","desc":"","lua_type":"Player | \\"NET_SERVER\\""},{"name":"payload","desc":"","lua_type":"Payload"}],"returns":[],"function_type":"method","source":{"line":156,"path":"lib/Bridge.luau"}},{"name":"step","desc":"Updates the incoming queue and snapshot and calls ``Bridge:_processOutgoingQueue()``.","params":[],"returns":[],"function_type":"method","source":{"line":184,"path":"lib/Bridge.luau"}},{"name":"snapshot","desc":"Returns a snapshot of the incoming queue.","params":[],"returns":[],"function_type":"method","source":{"line":199,"path":"lib/Bridge.luau"}},{"name":"send","desc":"Queue a packet to be sent in the outgoing queue","params":[],"returns":[],"function_type":"method","source":{"line":209,"path":"lib/Bridge.luau"}}],"properties":[],"types":[{"name":"orderedPayload","desc":"A Payload represents a singular table that will be sent over the RemoteEvent.\\nIt is structured in a way to minimize overhead when calling RemoteEvents.\\n\\nIn order to guarantee the order of the queue, an additional value is packed\\ninto the packet data. In order to minimize overhead, the value is represented\\nin a similar way as Identifiers.","fields":[{"name":"[Identifier]","lua_type":"{ { QueuePosition, any... } }","desc":""}],"source":{"line":50,"path":"lib/Bridge.luau"}},{"name":"unorderedPayload","desc":"A Payload represents a singular table that will be sent over the RemoteEvent.\\nIt is structured in a way to minimize overhead when calling RemoteEvents.\\n\\nBy default, each queue will be ordered. This is a design choice in order to promote\\npredictable and data-driven networking.","fields":[{"name":"[Identifier]","lua_type":"{ { any... } }","desc":""}],"tags":["Future Feature"],"source":{"line":64,"path":"lib/Bridge.luau"}}],"name":"Bridge","desc":"Handles all incoming and outgoing packets from a RemoteEvent.\\n\\nThe following API can be used by Advanced Users if they wish to not use the ``Net:start()`` method\\nor to bypass the ``Bridge:step()`` method in favor of custom behavior.","private":true,"source":{"line":12,"path":"lib/Bridge.luau"}}')}}]);