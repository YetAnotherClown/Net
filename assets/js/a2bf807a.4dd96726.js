"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[837],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),d=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=d(e.components);return r.createElement(l.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=d(n),m=a,f=p["".concat(l,".").concat(m)]||p[m]||u[m]||i;return n?r.createElement(f,o(o({ref:t},c),{},{components:n})):r.createElement(f,o({ref:t},c))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:a,o[1]=s;for(var d=2;d<i;d++)o[d]=n[d];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5577:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>d});var r=n(87462),a=(n(67294),n(3905));const i={sidebar_position:3},o="Compressing Data",s={unversionedId:"handling-data/compressing-data",id:"handling-data/compressing-data",title:"Compressing Data",description:"Why it matters",source:"@site/docs/handling-data/compressing-data.md",sourceDirName:"handling-data",slug:"/handling-data/compressing-data",permalink:"/Net/docs/handling-data/compressing-data",draft:!1,editUrl:"https://github.com/YetAnotherClown/Net/edit/main/docs/handling-data/compressing-data.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"defaultSidebar",previous:{title:"Querying Data",permalink:"/Net/docs/handling-data/querying-data"}},l={},d=[{value:"Why it matters",id:"why-it-matters",level:2},{value:"Identifiers",id:"identifiers",level:2}],c={toc:d},p="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"compressing-data"},"Compressing Data"),(0,a.kt)("h2",{id:"why-it-matters"},"Why it matters"),(0,a.kt)("p",null,"We live in a highly technologically advanced world today, despite this many households still have a subpar internet connection.\nBecause of this, clients can only send and receive a limited amount of data in a given time frame.\nTo ease this issue, we as programmers can optimize and reduce how much data we send over the internet, allowing for our\nplayers to spend more time playing and less time waiting for things to load."),(0,a.kt)("h2",{id:"identifiers"},"Identifiers"),(0,a.kt)("p",null,"Simply put, Identifiers are strings. You could simply just use a string when sending or querying data as your Identifier.\nHowever, Net provides a function to compress strings into 2 bytes in order to optimize bandwidth."),(0,a.kt)("p",null,"To create a Identifier, use ",(0,a.kt)("inlineCode",{parentName:"p"},"Net.identifier()"),". For example,"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'local MyIdentifier = Net.identifier("myIdentifier")\n')),(0,a.kt)("p",null,"For more technical details on how Identifiers work, Identifiers are stored in a global table and are packed using ",(0,a.kt)("inlineCode",{parentName:"p"},"string.pack()"),"\nbased on the position in which they are being packed. The global table looks something like:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"local IDENTIFIERS = {\n    [Index] = PackedString\n}\n")),(0,a.kt)("p",null,"Where ",(0,a.kt)("inlineCode",{parentName:"p"},"Index")," is the string passed through the function and the ",(0,a.kt)("inlineCode",{parentName:"p"},"PackedString")," is the return of running it through\n",(0,a.kt)("inlineCode",{parentName:"p"},'string.pack("B", pos)'),". Because of the nature of this, and the design choice to promote strictly declared identifiers,\ncreating identifiers dynamically after running any ",(0,a.kt)("inlineCode",{parentName:"p"},"Net:start()")," may result in incorrect identifiers between the\nclient and server."))}u.isMDXComponent=!0}}]);