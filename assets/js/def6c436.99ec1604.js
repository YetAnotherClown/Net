"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[52],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>y});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),s=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(u.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=s(n),m=a,y=p["".concat(u,".").concat(m)]||p[m]||d[m]||o;return n?r.createElement(y,l(l({ref:t},c),{},{components:n})):r.createElement(y,l({ref:t},c))}));function y(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=m;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i[p]="string"==typeof e?e:a,l[1]=i;for(var s=2;s<o;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},52519:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var r=n(87462),a=(n(67294),n(3905));const o={sidebar_position:2},l="Matter",i={unversionedId:"setup/matter",id:"setup/matter",title:"Matter",description:"Check out the adapted version of the Matter Example game to see how it's used in a real game.",source:"@site/docs/setup/matter.md",sourceDirName:"setup",slug:"/setup/matter",permalink:"/Net/docs/setup/matter",draft:!1,editUrl:"https://github.com/YetAnotherClown/Net/edit/main/docs/setup/matter.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"defaultSidebar",previous:{title:"ECR",permalink:"/Net/docs/setup/ecr"},next:{title:"Other Setups",permalink:"/Net/docs/setup/other"}},u={},s=[],c={toc:s},p="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"matter"},"Matter"),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"Check out the adapted version of the Matter Example game to see how it's used in a real game."),(0,a.kt)("p",{parentName:"admonition"},"See all of Net's ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/YetAnotherClown/Net/tree/main/examples"},"example projects")," in the repository.")),(0,a.kt)("p",null,"Being initially made for the Matter ECS, Net provides a simple function for scheduling your Routes to run on your Matter Loop."),(0,a.kt)("p",null,"Firstly, create a ",(0,a.kt)("inlineCode",{parentName:"p"},"routes.luau")," ModuleScript in ReplicatedStorage to strictly declare your Routes."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="routes.luau"',title:'"routes.luau"'},'local Net = require("Net.luau")\ntype Net<U...> = Net.Net<U...>\n\nlocal defaultConfiguration = {\n  Channel = "Reliable",\n  Event = "default",\n}\n\n-- Payload for replicating Entities\ntype EntityPayload = {\n    [string]: { -- EntityId\n        [string]: { -- Component name\n            data: ComponentInstance<T>\n        }\n    }\n}\n\n-- Replicate Matter Components\nlocal MatterReplication: Net<EntityPayload> = Net.new(defaultConfiguration)\n\n-- Signal that the Player has loaded\nlocal PlayerLoaded: Net<boolean> = Net.new(defaultConfiguration)\n\nreturn {\n  MatterReplication = MatterReplication,\n  PlayerLoaded = PlayerLoaded,\n}\n')),(0,a.kt)("p",null,"And now in the same script where you create your Matter Loop, you can run the ",(0,a.kt)("inlineCode",{parentName:"p"},"Net.start(Loop, { Net })"),"\nfunction to schedule your Routes to run on Matter's Middleware."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="init.server.luau / init.client.luau"',title:'"init.server.luau',"/":!0,'init.client.luau"':!0},'local Matter = require("Matter.luau")\nlocal World = Matter.World\nlocal Loop = Matter.Loop\n\nlocal Net = require("Net.luau")\nlocal routes = require("routes.luau")\n\nlocal world = World.new()\nlocal loop = Loop.new(world)\n\n-- Schedules your Routes\nNet.start(loop, routes)\n\nlocal systems = {}\nfor _, child in script.systems:GetChildren() do\n    if child:IsA("ModuleScript") then\n        table.insert(systems, require(child))\n    end\nend\n\nloop:scheduleSystems(systems) -- Schedule systems after running ``Net.start()``\n\n-- Begin the loop and make sure the ``Event`` key in your Routes configuration are added here\nloop:begin({\n    default = RunService.Heartbeat\n})\n')),(0,a.kt)("p",null,"Finally, in a Matter System we can use our ",(0,a.kt)("inlineCode",{parentName:"p"},"routes.luau")," ModuleScript to access our Routes and\nuse them within our Systems."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="systems/exampleSystem.luau"',title:'"systems/exampleSystem.luau"'},'local routes = require("routes.luau")\nlocal PlayerLoaded = routes.PlayerLoaded\n\nlocal function exampleSystem(world)\n    -- Query through every networking call that frame on the Server\n    for i, player, ...data in PlayerLoaded:query() do\n        -- Do something\n    end\n\n    -- Query through every networking call that frame on the Client\n    for i, _, ...data in PlayerLoaded:query() do\n        -- Do something\n    end\n\n    -- Send data from the Client to the Server\n    PlayerLoaded:send(...data)\n\n    -- Send data to a Client from the Server\n    PlayerLoaded:send(...data):to(Player)\nend\n')))}d.isMDXComponent=!0}}]);