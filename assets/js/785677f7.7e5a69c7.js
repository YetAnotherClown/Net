"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[859],{64760:e=>{e.exports=JSON.parse('{"functions":[{"name":"__iter","desc":"Creates a QueryResult that returns all Packets in the current frame\'s snapshot\\nfrom the Route\'s identifier.\\n\\nSee [Net:query] to filter by Senders.","params":[],"returns":[{"desc":"","lua_type":"QueryResult"}],"function_type":"method","private":true,"source":{"line":279,"path":"lib/init.luau"}},{"name":"query","desc":"Allows for iteration of all packets of the previous frame.\\nYou can filter by Senders by chaining the ``QueryResult:from()`` method onto the query method.\\n\\n:::note\\nDue to certain limitations with the Luau Type System, iterating over the QueryResult Object\\nwill not return typed values. In order to fix this, call ``:__iter()`` on the QueryResult Object.\\n\\nFor example:\\n```lua\\nfor i, sender, ... in net:query():__iter() do\\n\\t-- Do something\\nend\\n```\\n:::\\n\\nSee [Querying Data](/docs/getting-started/routes#querying) for more information.","params":[],"returns":[{"desc":"","lua_type":"QueryResult"}],"function_type":"method","source":{"line":306,"path":"lib/init.luau"}},{"name":"send","desc":"Sends data to all clients or to specific recipients from the Route\'s identifier.\\n\\nBy default, [Net:send] will send the data to all Clients. You can specify which\\nClients to receive the data by chaining [SendRequest:to] and passing\\n``{ Player }``, ``Player``, or ``Net.Server``.\\n\\nSee [Sending Data](/docs/getting-started/routes#sending) for more information.","params":[],"returns":[],"function_type":"method","source":{"line":322,"path":"lib/init.luau"}},{"name":"_queuePackets","desc":"Processes the Route\'s internal queue and sends it to the supplied Bridge.\\nDoing this will reset the internal queue.","params":[],"returns":[],"function_type":"method","private":true,"source":{"line":348,"path":"lib/init.luau"}},{"name":"start","desc":"Initializes your Routes by adding middleware to your Matter Loop.\\nThis ensures that your Routes run between each frame.\\n\\n:::note\\nPlease make sure that the event you set in the Configuration, or the default, is the same index you used for your\\n``RunService.Heartbeat`` event in your ``Loop:begin()`` method.\\n\\nYour Routes are meant to run on the heartbeat, like most systems. In some cases you may want to run your Routes on different events,\\nin this case it is acceptable to change it to a different event.\\n:::","params":[{"name":"loop","desc":"A Matter Loop","lua_type":"Loop"},{"name":"routes","desc":"A table of your Routes","lua_type":"{ Net }"}],"returns":[],"function_type":"static","source":{"line":449,"path":"lib/init.luau"}},{"name":"createHook","desc":"This function allows you to run Net scheduling code on your own events.\\n\\nWhen you provide a table of Routes, this function will return another function\\nyou can call which will step each Route and process it\'s Packet Queue.\\n\\nFor example, to run scheduling on the Heartbeat:\\n```lua\\nlocal hook = Net.createHook({ Net })\\nRunService.Heartbeat:Connect(hook)\\n```","params":[{"name":"routes","desc":"A table of your Routes","lua_type":"{ Net }"}],"returns":[{"desc":"","lua_type":"() -> ()"}],"function_type":"static","source":{"line":511,"path":"lib/init.luau"}},{"name":"new","desc":"Creates a new Route with a unique identifier, channel, and event.\\n\\n:::note\\nAll Routes with the same Channel will share a single Remote. It\'s recommended that you run all your\\nNet scheduling code on a single event.\\n:::","params":[{"name":"configuration","desc":"","lua_type":"Configuration?"}],"returns":[],"function_type":"static","source":{"line":537,"path":"lib/init.luau"}}],"properties":[],"types":[{"name":"Configuration","desc":":::note\\nAs of v0.5.0, Ratelimiting is not implemented. This feature will come in future versions.\\n:::\\n\\n### Channel\\n\\n**Reliable**: All packets will be sent and received per frame in order.\\n**Unreliable**: Packets may be dropped but will be received in order.","fields":[{"name":"Channel","lua_type":"\\"Reliable\\" | \\"Unreliable\\"","desc":"Default: Reliable"},{"name":"Event","lua_type":"string","desc":"The event to schedule the Route on in your Matter Loop -- Default: \\"default\\""},{"name":"Ratelimit","lua_type":"number","desc":"Amount of allowed invocations a frame"},{"name":"Middleware","lua_type":"(event: \\"send\\" | \\"receive\\", ...any?) -> ...any?","desc":"Runs before your packets are sent or received"}],"source":{"line":36,"path":"lib/init.luau"}}],"name":"Net","desc":"A Networking Library, inspired by BridgeNet2 & Bevy_Renet, made for ECS.\\n\\nSee the [Intro](/docs/intro) to get started.","source":{"line":229,"path":"lib/init.luau"}}')}}]);